<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AmcvAAAAAElFTkSuQmCC
</value>
  </data>
</root>